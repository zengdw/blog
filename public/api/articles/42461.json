{"title":"为什么Java中1000==1000为false，而100==100为true？","uid":"2ccfc909aebeafe15ee74b64b3820d5d","slug":42461,"date":"2021-08-02T08:00:15.000Z","updated":"2024-11-07T06:45:23.584Z","comments":true,"path":"api/articles/42461.json","keywords":"zengdw, java, html, js, css, spring, mysql","cover":null,"content":"<h3 id=\"为什么Java中1000-1000为false，而100-100为true？\"><a href=\"#为什么Java中1000-1000为false，而100-100为true？\" class=\"headerlink\" title=\"为什么Java中1000 == 1000为false，而100 == 100为true？\"></a>为什么Java中1000 == 1000为false，而100 == 100为true？</h3><p>主要是<code>Integer</code>内部类<code>IntegerCache</code>缓存了从 - 128 到 127 之间的所有的整数对象</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">private static class IntegerCache &#123;\n  static final int low &#x3D; -128;\n  static final int high;\n  static final Integer cache[];\n\n  static &#123;\n    &#x2F;&#x2F; high value may be configured by property\n    int h &#x3D; 127;\n\t\t...\n    high &#x3D; h;\n\n    cache &#x3D; new Integer[(high - low) + 1];\n    int j &#x3D; low;\n    for(int k &#x3D; 0; k &lt; cache.length; k++)\n      cache[k] &#x3D; new Integer(j++);\n    \n    assert IntegerCache.high &gt;&#x3D; 127;\n  &#125;\n\n  private IntegerCache() &#123;&#125;\n&#125;</code></pre>\n\n<p>在声明Integer a = 100时，实际是调用了<code>Integer.valueOf(int i)</code>，直接从缓存取值，从而不管声明几个变量都是对应的同一个对象。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public static Integer valueOf(int i) &#123;\n  if (i &gt;&#x3D; IntegerCache.low &amp;&amp; i &lt;&#x3D; IntegerCache.high)\n    return IntegerCache.cache[i + (-IntegerCache.low)];\n  return new Integer(i);\n&#125;</code></pre>\n\n<p><strong>参考：</strong><a href=\"https://mp.weixin.qq.com/s?__biz=MzIzMzgxOTQ5NA==&amp;amp;mid=2247547099&amp;amp;idx=3&amp;amp;sn=ca91e1ef68e4833fe373e76b87fc9753&amp;amp;chksm=e8fda4d2df8a2dc4654af7d5a13f91132d27f0967933094b9a0cb1ca25204d486bdae434f91a&amp;amp;scene=132#wechat_redirect\" title=\"为什么Java中1000 == 1000为false，而100 == 100为true？\">为什么Java中1000 == 1000为false，而100 == 100为true？</a></p>\n","text":"为什么Java中1000 == 1000为false，而100 == 100为true？主要是Integer内部类IntegerCache缓存了从 - 128 到 127 之间的所有的整数对象 private static class IntegerCache &#123; st...","link":"","photos":[],"count_time":{"symbolsCount":959,"symbolsTime":"1 mins."},"categories":[{"name":"转载","slug":"转载","count":1,"path":"api/categories/转载.json"}],"tags":[{"name":"java","slug":"java","count":1,"path":"api/tags/java.json"},{"name":"基础","slug":"基础","count":1,"path":"api/tags/基础.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88Java%E4%B8%AD1000-1000%E4%B8%BAfalse%EF%BC%8C%E8%80%8C100-100%E4%B8%BAtrue%EF%BC%9F\"><span class=\"toc-text\">为什么Java中1000 &#x3D;&#x3D; 1000为false，而100 &#x3D;&#x3D; 100为true？</span></a></li></ol>","author":{"name":"zengdw","slug":"blog-author","avatar":"/img/z.png","link":"/","description":"个人学习记录","socials":{"github":"https://github.com/zengdw","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/img/svg/gitee.svg","link":"https://gitee.com/zengdw"},"email":{"icon":"/img/svg/email-fill.svg","link":"mailto:309606298@qq.com"}}}},"mapped":true,"prev_post":{"title":"JavaScript常用函数封装方法","uid":"6fbfd3f92e094317427a7de3addb6e33","slug":19543,"date":"2021-09-16T03:24:59.000Z","updated":"2024-11-07T06:45:23.575Z","comments":true,"path":"api/articles/19543.json","keywords":"zengdw, java, html, js, css, spring, mysql","cover":null,"text":"JavaScript常用函数封装方法1、加载js || css || styleconst loadRes &#x3D; function(name, type, fn) &#123; &#x2F;&#x2F; 加载js || css || style let ref if (t...","link":"","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"前端","slug":"前端","count":6,"path":"api/categories/前端.json"}],"tags":[{"name":"js","slug":"js","count":4,"path":"api/tags/js.json"},{"name":"常用方法","slug":"常用方法","count":1,"path":"api/tags/常用方法.json"}],"author":{"name":"zengdw","slug":"blog-author","avatar":"/img/z.png","link":"/","description":"个人学习记录","socials":{"github":"https://github.com/zengdw","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/img/svg/gitee.svg","link":"https://gitee.com/zengdw"},"email":{"icon":"/img/svg/email-fill.svg","link":"mailto:309606298@qq.com"}}}}},"next_post":{"title":"XMLHttpRequest下载文件","uid":"f5148e2ec46f11185a88064560b60cb3","slug":52642,"date":"2021-07-16T17:03:02.000Z","updated":"2024-11-07T06:45:23.577Z","comments":true,"path":"api/articles/52642.json","keywords":"zengdw, java, html, js, css, spring, mysql","cover":null,"text":"使用XMLHttpRequest下载文件 const xhr &#x3D; new XMLHttpRequest() xhr.open(&#39;get&#39;, &#39;下载链接&#39;) xhr.responseType &#x3D; &#39;blob&#39; xh...","link":"","photos":[],"count_time":{"symbolsCount":763,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":6,"path":"api/categories/前端.json"}],"tags":[{"name":"js","slug":"js","count":4,"path":"api/tags/js.json"}],"author":{"name":"zengdw","slug":"blog-author","avatar":"/img/z.png","link":"/","description":"个人学习记录","socials":{"github":"https://github.com/zengdw","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/img/svg/gitee.svg","link":"https://gitee.com/zengdw"},"email":{"icon":"/img/svg/email-fill.svg","link":"mailto:309606298@qq.com"}}}}}}