{"title":"oauth2认证服务配置","uid":"c38eff67b0e937e596e547c6e75bdff6","slug":37106,"date":"2020-11-05T06:22:12.000Z","updated":"2024-11-07T06:45:23.581Z","comments":true,"path":"api/articles/37106.json","keywords":"zengdw, java, html, js, css, spring, mysql","cover":null,"content":"<h3 id=\"1、安全配置\"><a href=\"#1、安全配置\" class=\"headerlink\" title=\"1、安全配置\"></a>1、安全配置</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Configuration\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter &#123;\n    @Resource\n    private UserDetailsService userDetailsService;\n\n    @Override\n    @Bean\n    protected AuthenticationManager authenticationManager() throws Exception &#123;\n        return super.authenticationManager();\n    &#125;\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception &#123;\n        auth.userDetailsService(userDetailsService).passwordEncoder(passwordEncoder());\n    &#125;\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception &#123;\n        http.authorizeRequests()\n                .anyRequest().authenticated()\n                .and()\n                .formLogin().permitAll()\n                .and()\n                .csrf().disable();\n    &#125;\n\n    @Bean\n    public PasswordEncoder passwordEncoder() &#123;\n        return new BCryptPasswordEncoder();\n    &#125;\n&#125;</code></pre>\n\n<h3 id=\"2、认证服务器配置\"><a href=\"#2、认证服务器配置\" class=\"headerlink\" title=\"2、认证服务器配置\"></a>2、认证服务器配置</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Configuration\n&#x2F;&#x2F;指明这是一个认证服务器\n@EnableAuthorizationServer\npublic class AuthorizationServerConfig extends AuthorizationServerConfigurerAdapter &#123;\n    @Resource\n    private AuthenticationManager authenticationManager;\n    @Resource\n    private DataSource dataSource;\n\n    &#x2F;**\n     * 第三方客户端配置\n     *&#x2F;\n    @Override\n    public void configure(ClientDetailsServiceConfigurer clients) throws Exception &#123;\n        clients.withClientDetails(detailsService());\n    &#125;\n\n\t&#x2F;**\n     * 端点权限配置\n     *&#x2F;\n    @Override\n    public void configure(AuthorizationServerSecurityConfigurer security) &#123;\n\t\tsecurity.checkTokenAccess(&quot;permitAll()&quot;)\n                .tokenKeyAccess(&quot;permitAll()&quot;)\n                &#x2F;&#x2F;允许使用form表单提交\n                .allowFormAuthenticationForClients();\n    &#125;\n\n    @Override\n    public void configure(AuthorizationServerEndpointsConfigurer endpoints) &#123;\n\t\t\t\t&#x2F;&#x2F;授权码模式获取token必须要配置authenticationManager\n\t\tendpoints.authenticationManager(authenticationManager)\n                &#x2F;&#x2F;token储存位置\n                .tokenStore(new JdbcTokenStore(dataSource))\n                &#x2F;&#x2F;使用刷新token\n                .reuseRefreshTokens(true)\n                &#x2F;&#x2F;授权码模式 code存放在内存中\n                .authorizationCodeServices(new JdbcAuthorizationCodeServices(dataSource));\n    &#125;\n\n    @Bean\n    public ClientDetailsService detailsService()&#123;\n        return new JdbcClientDetailsService(dataSource);\n    &#125;\n&#125;</code></pre>\n\n","text":"1、安全配置@Configuration @EnableWebSecurity public class SecurityConfig extends WebSecurityConfigurerAdapter &#123; @Resource private UserDetail...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"java","slug":"java","count":4,"path":"api/categories/java.json"}],"tags":[{"name":"spring","slug":"spring","count":2,"path":"api/tags/spring.json"},{"name":"oauth2","slug":"oauth2","count":2,"path":"api/tags/oauth2.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">1、安全配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E8%AE%A4%E8%AF%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2、认证服务器配置</span></a></li></ol>","author":{"name":"zengdw","slug":"blog-author","avatar":"/img/z.png","link":"/","description":"个人学习记录","socials":{"github":"https://github.com/zengdw","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/img/svg/gitee.svg","link":"https://gitee.com/zengdw"},"email":{"icon":"/img/svg/email-fill.svg","link":"mailto:309606298@qq.com"}}}},"mapped":true,"prev_post":{"title":"logkack日志配置文件","uid":"f9dec9d80bbb9ed9aeded48053152e85","slug":22012,"date":"2021-03-23T07:14:20.000Z","updated":"2024-11-07T06:45:23.580Z","comments":true,"path":"api/articles/22012.json","keywords":"zengdw, java, html, js, css, spring, mysql","cover":null,"text":"logkack-spring.xml &lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt; &lt;configuration&gt; &lt;!-- magenta:洋红 --&gt...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"java","slug":"java","count":4,"path":"api/categories/java.json"}],"tags":[{"name":"logback","slug":"logback","count":2,"path":"api/tags/logback.json"}],"author":{"name":"zengdw","slug":"blog-author","avatar":"/img/z.png","link":"/","description":"个人学习记录","socials":{"github":"https://github.com/zengdw","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/img/svg/gitee.svg","link":"https://gitee.com/zengdw"},"email":{"icon":"/img/svg/email-fill.svg","link":"mailto:309606298@qq.com"}}}}},"next_post":{"title":"oauth2获取token的4种模式","uid":"08a5a1672aa09760d3d6299b9461747e","slug":33303,"date":"2020-11-05T06:01:54.000Z","updated":"2024-11-07T06:45:23.581Z","comments":true,"path":"api/articles/33303.json","keywords":"zengdw, java, html, js, css, spring, mysql","cover":null,"text":"1、授权码模式（authorization_code）1.1 获取code/oauth/authorize?client_id=client1&amp;redirect_uri=https://www.baidu.com/&amp;response_type=code 1.2 获...","link":"","photos":[],"count_time":{"symbolsCount":765,"symbolsTime":"1 mins."},"categories":[{"name":"java","slug":"java","count":4,"path":"api/categories/java.json"}],"tags":[{"name":"spring","slug":"spring","count":2,"path":"api/tags/spring.json"},{"name":"oauth2","slug":"oauth2","count":2,"path":"api/tags/oauth2.json"}],"author":{"name":"zengdw","slug":"blog-author","avatar":"/img/z.png","link":"/","description":"个人学习记录","socials":{"github":"https://github.com/zengdw","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/img/svg/gitee.svg","link":"https://gitee.com/zengdw"},"email":{"icon":"/img/svg/email-fill.svg","link":"mailto:309606298@qq.com"}}}}}}