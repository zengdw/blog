{"title":"Angular 项目结构","uid":"a3fcce9bf882ac6a7764fea2087b5c3b","slug":742625435,"date":"2021-12-23T02:16:35.000Z","updated":"2024-11-07T06:45:23.574Z","comments":true,"path":"api/articles/742625435.json","keywords":"zengdw, java, html, js, css, spring, mysql","cover":null,"content":"<p>Angular以工作区作为上下文来开发应用。工作区包含一个或多个<a href=\"https://angular.cn/guide/glossary#project\">项目</a>的文件集。一个项目就是一组包含独立应用或可共享库的文件。Angular CLI 的 <code>ng new &lt;my-project&gt;</code> 命令可以创建一个工作区。</p>\n<h2 id=\"工作区配置文件\"><a href=\"#工作区配置文件\" class=\"headerlink\" title=\"工作区配置文件\"></a>工作区配置文件</h2><p>每个工作区中的所有项目共享同一个 <a href=\"https://angular.cn/guide/workspace-config\">CLI 配置环境</a>。该工作区的顶层包含着全工作区级的配置文件、根应用的配置文件以及一些包含根应用的源文件和测试文件的子文件夹。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">工作区配置文件</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">.editorconfig</td>\n<td>代码编辑器的配置。参阅 <a href=\"https://editorconfig.org/\">EditorConfig</a>。</td>\n</tr>\n<tr>\n<td align=\"left\">.gitignore</td>\n<td>指定 <a href=\"https://git-scm.com/\">Git</a> 应忽略的不必追踪的文件。</td>\n</tr>\n<tr>\n<td align=\"left\">README.md</td>\n<td>根应用的简介文档.</td>\n</tr>\n<tr>\n<td align=\"left\">angular.json</td>\n<td>为工作区中的所有项目指定 CLI 的默认配置，包括 CLI 要用到的构建、启动开发服务器和测试工具的配置项，比如 <a href=\"https://palantir.github.io/tslint/\">TSLint</a>，<a href=\"https://karma-runner.github.io/\">Karma</a> 和 <a href=\"http://www.protractortest.org/\">Protractor</a>。欲知详情，请参阅 <a href=\"https://angular.cn/guide/workspace-config\">Angular 工作区配置</a> 部分。</td>\n</tr>\n<tr>\n<td align=\"left\">package.json</td>\n<td>配置工作区中所有项目可用的 <a href=\"https://angular.cn/guide/npm-packages\">npm 包依赖</a>。</td>\n</tr>\n<tr>\n<td align=\"left\">src/</td>\n<td>根项目的源文件。</td>\n</tr>\n<tr>\n<td align=\"left\">tsconfig.json</td>\n<td>工作区中所有项目的基本 <a href=\"https://www.typescriptlang.org/\">TypeScript</a> 配置。所有其它配置文件都继承自这个基本配置。欲知详情，参阅 TypeScript 文档中的 <a href=\"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#configuration-inheritance-with-extends\">通过 extends 进行配置继承</a> 部分。</td>\n</tr>\n<tr>\n<td align=\"left\">tslint.json</td>\n<td>工作区中所有项目的默认的 <a href=\"https://palantir.github.io/tslint/\">TSLint</a> 配置。</td>\n</tr>\n</tbody></table>\n<h2 id=\"应用项目文件\"><a href=\"#应用项目文件\" class=\"headerlink\" title=\"应用项目文件\"></a>应用项目文件</h2><p>CLI 命令 <code>ng new my-app</code> 会默认创建名为 “my-app” 的工作区文件夹，并在 <code>src/</code> 文件夹下为工作区顶层的根应用生成一个新的应用骨架。新生成的应用包含一个根模块的源文件，包括一个根组件及其模板。</p>\n<p>当工作区文件结构到位时，可以在命令行中使用 <code>ng generate</code> 命令往该应用中添加功能和数据。这个初始的根应用是 CLI 命令的<em>默认应用</em></p>\n<p>对于单应用的工作区，工作区的 <code>src/</code> 子文件夹包含根应用的源文件（应用逻辑、数据和静态资源）。对于多项目的工作区，<code>projects/</code> 文件夹中的其它项目各自包含一个具有相同结构的 <code>project-name/src/</code> 子目录。</p>\n<h3 id=\"应用源文件\"><a href=\"#应用源文件\" class=\"headerlink\" title=\"应用源文件\"></a>应用源文件</h3><p>顶层文件 <code>src/</code> 为测试并运行应用提供支持。其子文件夹中包含应用源代码和应用的专属配置。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">应用支持文件</th>\n<th>目的</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">app/</td>\n<td>包含定义应用逻辑和数据的组件文件。</td>\n</tr>\n<tr>\n<td align=\"left\">assets/</td>\n<td>包含要在构建应用时应该按原样复制的图像和其它静态资源文件。</td>\n</tr>\n<tr>\n<td align=\"left\">environments/</td>\n<td>包含特定目标环境的构建配置选项。默认情况下，有一个无名的标准开发环境和一个生产（“prod”）环境。你还可以定义其它的目标环境配置。</td>\n</tr>\n<tr>\n<td align=\"left\">favicon.ico</td>\n<td>用作该应用在标签栏中的图标。</td>\n</tr>\n<tr>\n<td align=\"left\">index.html</td>\n<td>提供服务的主要 HTML 页面。CLI 会在构建应用时自动添加所有的 JavaScript 和 CSS 文件，所以通常不用手动添加任何 <code>&lt;script&gt;</code> 或 <code>&lt;link&gt;</code> 标签。</td>\n</tr>\n<tr>\n<td align=\"left\">main.ts</td>\n<td>应用的主要切入点。用 <a href=\"https://angular.cn/guide/glossary#jit\">JIT 编译器</a>编译应用，然后引导应用的根模块（AppModule）在浏览器中运行。也可以在不改变任何代码的情况下改用 <a href=\"https://angular.cn/guide/aot-compiler\">AOT 编译器</a>，只要在 CLI 的 <code>build</code> 和 <code>serve</code> 命令中加上 <code>--aot</code> 标志就可以了。</td>\n</tr>\n<tr>\n<td align=\"left\">polyfills.ts</td>\n<td>为浏览器支持提供了腻子（polyfill）脚本。</td>\n</tr>\n<tr>\n<td align=\"left\">styles.sass</td>\n<td>列出为项目提供样式的 CSS 文件。该扩展还反映了为该项目配置的样式预处理器。</td>\n</tr>\n<tr>\n<td align=\"left\">test.ts</td>\n<td>单元测试的主入口点，带有一些 Angular 特有的配置。通常不需要编辑这个文件。</td>\n</tr>\n</tbody></table>\n<p>在 <code>src/</code> 文件夹里面，<code>app/</code> 文件夹中包含此项目的逻辑和数据。Angular 组件、模板和样式也都在这里。</p>\n<table>\n<thead>\n<tr>\n<th><code>SRC/APP/</code> 文件</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>app/app.component.ts</td>\n<td>为应用的根组件定义逻辑，名为 <code>AppComponent</code>。当你向应用中添加组件和服务时，与这个根组件相关联的视图就会成为<a href=\"https://angular.cn/guide/glossary#view-hierarchy\">视图树</a>的根。</td>\n</tr>\n<tr>\n<td>app/app.component.html</td>\n<td>定义与根组件 <code>AppComponent</code> 关联的 HTML 模板。</td>\n</tr>\n<tr>\n<td>app/app.component.css</td>\n<td>为根组件 <code>AppComponent</code> 定义了基本的 CSS 样式表。</td>\n</tr>\n<tr>\n<td>app/app.component.spec.ts</td>\n<td>为根组件 <code>AppComponent</code> 定义了一个单元测试。</td>\n</tr>\n<tr>\n<td>app/app.module.ts</td>\n<td>定义了名为 <code>AppModule</code> 的根模块，它会告诉 Angular 如何组装应用。这里最初只声明一个 <code>AppComponent</code>。当你向应用中添加更多组件时，它们也必须在这里声明。</td>\n</tr>\n</tbody></table>\n<h3 id=\"应用配置文件\"><a href=\"#应用配置文件\" class=\"headerlink\" title=\"应用配置文件\"></a>应用配置文件</h3><p>根应用的配置文件位于工作区的根目录下。对于多项目工作区，项目专属的配置文件位于项目根目录 <code>projects/project-name/</code>。</p>\n<p>项目专属的 <a href=\"https://www.typescriptlang.org/\">TypeScript</a> 配置文件继承自工作区范围内的 <code>tsconfig.json</code>，而项目专属的 <a href=\"https://palantir.github.io/tslint/\">TSLint</a> 配置文件则继承自全工作区级内的 <code>tslint.json</code>。</p>\n<table>\n<thead>\n<tr>\n<th>应用专属的配置文件</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>.browserslistrc</td>\n<td>配置各种前端工具之间共享的目标浏览器和 Node.js 版本。</td>\n</tr>\n<tr>\n<td>karma.conf.js</td>\n<td>应用专属的 <a href=\"https://karma-runner.github.io/2.0/config/configuration-file.html\">Karma</a> 配置。</td>\n</tr>\n<tr>\n<td>tsconfig.app.json</td>\n<td>应用专属的 <a href=\"https://www.typescriptlang.org/\">TypeScript</a> 配置，包括 TypeScript 和 Angular 模板编译器的选项。参阅 <a href=\"https://angular.cn/guide/typescript-configuration\">TypeScript 配置</a>。</td>\n</tr>\n<tr>\n<td>tsconfig.spec.json</td>\n<td>应用测试的 <a href=\"https://www.typescriptlang.org/\">TypeScript</a> 配置。参阅 <a href=\"https://angular.cn/guide/typescript-configuration\">TypeScript 配置</a>。</td>\n</tr>\n<tr>\n<td>tslint.json</td>\n<td>应用专属的 <a href=\"https://palantir.github.io/tslint/\">TSLint</a> 配置。</td>\n</tr>\n</tbody></table>\n<h2 id=\"多重项目\"><a href=\"#多重项目\" class=\"headerlink\" title=\"多重项目\"></a>多重项目</h2><p>多项目工作区适用于对所有 Angular 项目使用单一存储库（单仓库模型）和全局配置的企业。多项目工作区也能为库开发提供支持。</p>\n<h3 id=\"建立多项目工作区\"><a href=\"#建立多项目工作区\" class=\"headerlink\" title=\"建立多项目工作区\"></a>建立多项目工作区</h3><p>如果打算在工作区中包含多个项目，可以在创建工作区时不要自动创建初始应用，并为工作区指定一个唯一的名字。下列命令用于创建一个包含全工作区级配置文件的工作区，但没有根应用。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ng new my-workspace --create-application false</code></pre>\n\n<p>然后，可以使用工作区内唯一的名字来生成应用和库。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd my-workspace\nng generate application my-first-app</code></pre>\n\n<h3 id=\"多重项目的文件结构\"><a href=\"#多重项目的文件结构\" class=\"headerlink\" title=\"多重项目的文件结构\"></a>多重项目的文件结构</h3><p>工作区中第一个显式生成的应用会像工作区中的其它项目一样放在 <code>projects/</code> 文件夹中。新生成的库也会添加到 <code>projects/</code> 下。当你以这种方式创建项目时，工作区的文件结构与<a href=\"https://angular.cn/guide/workspace-config\">工作区配置文件</a> <code>angular.json</code> 中的结构完全一致。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">my-workspace&#x2F;\n  ...             (workspace-wide config files)\n  projects&#x2F;       (generated applications and libraries)\n    my-first-app&#x2F; --(an explicitly generated application)\n      ...         --(application-specific config)\n      src&#x2F;        --(source and support files for application)\n    my-lib&#x2F;       --(a generated library)\n      ...         --(library-specific config)\n      src&#x2F;        --source and support files for library)</code></pre>\n\n<h2 id=\"库项目文件\"><a href=\"#库项目文件\" class=\"headerlink\" title=\"库项目文件\"></a>库项目文件</h2><p>当你使用 CLI 命令（例如 <code>ng generate library my-lib</code>）生成一个库时，所生成的文件会放在工作区的 <code>projects/</code> 文件夹中。</p>\n<p>库和应用不同，它们有自己的 <code>package.json</code> 配置文件。在 <code>projects/</code> 目录下，<code>my-lib</code> 文件夹中包含你的库代码。</p>\n<table>\n<thead>\n<tr>\n<th>库的源文件</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>src/lib</td>\n<td>包含库项目的逻辑和数据。像应用项目一样，库项目也可以包含组件、服务、模块、指令和管道。</td>\n</tr>\n<tr>\n<td>src/test.ts</td>\n<td>单元测试的主要入口点是一些库专属的配置。通常不用编辑这个文件。</td>\n</tr>\n<tr>\n<td>src/public-api.ts</td>\n<td>指定从库中导出的所有文件。</td>\n</tr>\n<tr>\n<td>karma.conf.js</td>\n<td>库专属的 <a href=\"https://karma-runner.github.io/2.0/config/configuration-file.html\">Karma</a> 配置。</td>\n</tr>\n<tr>\n<td>ng-package.json</td>\n<td>构建库时，<a href=\"https://github.com/ng-packagr/ng-packagr\">ng-packagr</a> 用到的配置文件。</td>\n</tr>\n<tr>\n<td>package.json</td>\n<td>配置这个库所需的 <a href=\"https://angular.cn/guide/npm-packages\">npm 包依赖</a>。</td>\n</tr>\n<tr>\n<td>tsconfig.lib.json</td>\n<td>库专属的 <a href=\"https://www.typescriptlang.org/\">TypeScript</a> 配置，包括 TypeScript 和 Angular 模板编译器选项。参阅 <a href=\"https://angular.cn/guide/typescript-configuration\">TypeScript 配置</a>。</td>\n</tr>\n<tr>\n<td>tsconfig.lib.prod.json</td>\n<td>库专属的 <a href=\"https://www.typescriptlang.org/\">TypeScript</a> 配置，用于构建生产模式的库。</td>\n</tr>\n<tr>\n<td>tsconfig.spec.json</td>\n<td>测试库时用到的 <a href=\"https://www.typescriptlang.org/\">TypeScript</a> 配置。</td>\n</tr>\n<tr>\n<td>tslint.json</td>\n<td>库专属的 <a href=\"https://palantir.github.io/tslint/\">TSLint</a> 配置。</td>\n</tr>\n</tbody></table>\n","text":"Angular以工作区作为上下文来开发应用。工作区包含一个或多个项目的文件集。一个项目就是一组包含独立应用或可共享库的文件。Angular CLI 的 ng new &lt;my-project&gt; 命令可以创建一个工作区。 工作区配置文件每个工作区中的所有项目共享同一个 C...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"Angular","slug":"Angular","count":2,"path":"api/categories/Angular.json"}],"tags":[{"name":"Angular","slug":"Angular","count":2,"path":"api/tags/Angular.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E5%8C%BA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">工作区配置文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">应用项目文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E6%BA%90%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">应用源文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">应用配置文件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E9%87%8D%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">多重项目</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E7%AB%8B%E5%A4%9A%E9%A1%B9%E7%9B%AE%E5%B7%A5%E4%BD%9C%E5%8C%BA\"><span class=\"toc-text\">建立多项目工作区</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E9%87%8D%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">多重项目的文件结构</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BA%93%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">库项目文件</span></a></li></ol>","author":{"name":"zengdw","slug":"blog-author","avatar":"/img/z.png","link":"/","description":"个人学习记录","socials":{"github":"https://github.com/zengdw","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/img/svg/gitee.svg","link":"https://gitee.com/zengdw"},"email":{"icon":"/img/svg/email-fill.svg","link":"mailto:309606298@qq.com"}}}},"mapped":true,"prev_post":{"title":"Angular 工作区配置","uid":"450f8cafb9966ab433a025fae8f6dbb3","slug":3154631999,"date":"2021-12-24T10:20:08.000Z","updated":"2024-11-07T06:45:23.574Z","comments":true,"path":"api/articles/3154631999.json","keywords":"zengdw, java, html, js, css, spring, mysql","cover":"/img/cover/0.jpg","text":"Angular 工作区根目录下的 angular.json 文件提供了全工作区级的配置和具体项目的默认配置，供 Angular CLI 中的构建工具和开发工具使用。 此配置中所提供的路径值都是相对于工作区根目录的 JSON的总体结构在angular.json的顶层，一些属性用于工...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"Angular","slug":"Angular","count":2,"path":"api/categories/Angular.json"}],"tags":[{"name":"Angular","slug":"Angular","count":2,"path":"api/tags/Angular.json"}],"author":{"name":"zengdw","slug":"blog-author","avatar":"/img/z.png","link":"/","description":"个人学习记录","socials":{"github":"https://github.com/zengdw","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/img/svg/gitee.svg","link":"https://gitee.com/zengdw"},"email":{"icon":"/img/svg/email-fill.svg","link":"mailto:309606298@qq.com"}}}},"feature":true},"next_post":{"title":"solr查询","uid":"78ffce49b04ec8f420c47ced87ba3443","slug":1939,"date":"2021-10-26T02:59:22.000Z","updated":"2024-11-07T06:45:23.583Z","comments":true,"path":"api/articles/1939.json","keywords":"zengdw, java, html, js, css, spring, mysql","cover":null,"text":"solr查询 http://127.0.0.1:8983/solr/films/select films:索引名称 搜索单个术语这可以跨多个字段进行查询，通过复制字段（Copy Field）实现 /select?q=查询参数 限制返回文档的字段 /select?fl=id,nam...","link":"","photos":[],"count_time":{"symbolsCount":577,"symbolsTime":"1 mins."},"categories":[{"name":"中间键","slug":"中间键","count":3,"path":"api/categories/中间键.json"}],"tags":[{"name":"solr","slug":"solr","count":2,"path":"api/tags/solr.json"},{"name":"tomcat","slug":"tomcat","count":2,"path":"api/tags/tomcat.json"},{"name":"搜索引擎","slug":"搜索引擎","count":2,"path":"api/tags/搜索引擎.json"}],"author":{"name":"zengdw","slug":"blog-author","avatar":"/img/z.png","link":"/","description":"个人学习记录","socials":{"github":"https://github.com/zengdw","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/img/svg/gitee.svg","link":"https://gitee.com/zengdw"},"email":{"icon":"/img/svg/email-fill.svg","link":"mailto:309606298@qq.com"}}}}}}